using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using OdeToFood.Data;
using OdeToFood.Models;

namespace OdeToFood.Services
{
    // Use Ctrl + . to implement Interface here if you get error under IRestaurantData
    public class SqlRestaurantData : IRestaurantData
    {
        private OdeToFoodDbContext _context;

        public SqlRestaurantData(OdeToFoodDbContext context)
        {
            _context = context;
        }
        public Restaurant Add(Restaurant restaurant)
        {
            _context.Restaurants.Add(restaurant);
            _context.SaveChanges(); // Better method use this in another method, you might save changes after multiple changes
            return restaurant; // new id property will be generated by sql 
        }

        public Restaurant Get(int id)
        {
            return _context.Restaurants.FirstOrDefault( r => r.Id == id);
        }

        public IEnumerable<Restaurant> GetAll()  // Be carefull if large database IEnumerable is not right choice in millon records (Performance issue) 
        // Choose  IQueryable  instead.
        {
           return _context.Restaurants.OrderBy(r => r.Name);
        }

        public Restaurant Update(Restaurant restaurant)
        {
            // Attaching dbcontext

            //_context.Attach(restaurant).State = Microsoft.EntityFrameworkCore.EntityState.Modified; 
            //This also can be used without adding Microsoft.EntityFrameworkCore on top

            _context.Attach(restaurant).State = EntityState.Modified; // This is same as upper way
            _context.SaveChanges();
            return restaurant;
        }
    }
}